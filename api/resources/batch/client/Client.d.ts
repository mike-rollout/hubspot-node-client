/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as RolloutApi from "../../..";
export declare namespace Batch {
    interface Options {
        environment?: core.Supplier<environments.RolloutApiEnvironment | string>;
        token: core.Supplier<core.BearerToken>;
        privateAppLegacy: core.Supplier<string>;
        privateApp: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Batch {
    protected readonly _options: Batch.Options;
    constructor(_options: Batch.Options);
    postCrmV3ObjectsContactsBatchReadRead(request: RolloutApi.BatchReadInputSimplePublicObjectId, requestOptions?: Batch.RequestOptions): Promise<RolloutApi.BatchResponseSimplePublicObject>;
    postCrmV3ObjectsContactsBatchArchiveArchive(request: RolloutApi.BatchInputSimplePublicObjectId, requestOptions?: Batch.RequestOptions): Promise<void>;
    postCrmV3ObjectsContactsBatchCreateCreate(request: RolloutApi.BatchInputSimplePublicObjectInputForCreate, requestOptions?: Batch.RequestOptions): Promise<RolloutApi.BatchResponseSimplePublicObject>;
    postCrmV3ObjectsContactsBatchUpdateUpdate(request: RolloutApi.BatchInputSimplePublicObjectBatchInput, requestOptions?: Batch.RequestOptions): Promise<RolloutApi.BatchResponseSimplePublicObject>;
    protected _getAuthorizationHeader(): Promise<string>;
}
